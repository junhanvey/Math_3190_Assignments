Team = character(),
Record = numeric()
)
x = 1:720
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
recs23 <- for(i in Teams$Away){
add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
print(recs23)
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
recs23 <- for(i in 1:710){
add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
print(recs23)
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
print(recs23)
View(recs23)
View(recs23)
teamGms("UNT Dallas")
teamGms("Fort Valley St.")
View(cbbga24)
View(cbbga24)
View(cbbga23)
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Record = numeric()
)
x = 1:710
# recs23 <- add_row(recs23, Team = Teams$Away[1], Record = tmRec(Teams$Away[1]))
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Record = tmRec(Teams$Away[i]))
}
print(recs23)
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggplot2)
library(readr)
cbbga24 <- as_tibble(cbbga24)
cbbga24 <- read.fwf("http://kenpom.com/cbbga24.txt", widths = c(11, 23, 3, 23, 4, 5, 15), strip.white = TRUE, header = FALSE)
cbbga24 <- as_tibble(cbbga24)
cbbga24 <- rename(cbbga24, "Date" = "V1", "Away" = "V2", "AwayPts" = "V3", "Home" = "V4", "HomePts" = "V5",
"Neutral?" = "V6", "Site" = "V7"   )
cbbga24 |>
mutate(Diff = AwayPts - HomePts)
cbbga24 |>
arrange(Home)
cbbga24 |>
select(!c("Neutral?", "Site"))
cbbga24 <-
read.fwf("http://kenpom.com/cbbga24.txt", widths = c(11, 23, 3, 23, 4, 5, 15),
strip.white = TRUE, header = FALSE) |> # a
rename("Date" = "V1", "Away" = "V2", "AwayPts" = "V3", "Home" = "V4",
"HomePts" = "V5", "Neutral?" = "V6", "Site" = "V7" ) |> # b
mutate(Diff = AwayPts - HomePts) |> # c
arrange(Home) |> # d
select(!c("Neutral?", "Site"))  # e
cbbga23 <- cbbga24 |>
mutate(Date = mdy(Date)) |>
filter(Date < '2024-01-01')
as_tibble(cbbga23)
teamGms <- function(team) {
cbbga23 |>
filter(Away == team | Home == team)
}
teamGms("Southern Utah")
teamGms("Southern Utah") |>
mutate(
Result = case_when(
(Away == "Southern Utah" & Diff > 0) ~ "Win",
(Home == "Southern Utah" & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss")) |>
summarize(record = wins/(wins + loss)) |>
as.numeric()
teamGms("Southern Utah") |>
mutate(
Result = case_when(
(Away == "Southern Utah" & Diff > 0) ~ "Win",
(Home == "Southern Utah" & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss")) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
tmRec <- function(team) {
teamGms(team) |>
mutate(
Result = case_when(
(Away == team & Diff > 0) ~ "Win",
(Home == team & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss")) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
}
tmRec("Southern Utah")
tmRec("Southern Utah")[1]
tmRec <- function(team) {
teamGms(team) |>
mutate(
Result = case_when(
(Away == team & Diff > 0) ~ "Win",
(Home == team & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss", record = wins/(wins + loss)) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
}
tmRec <- function(team){
teamGms(team) |>
mutate(
Result = case_when(
(Away == team & Diff > 0) ~ "Win",
(Home == team & Diff < 0) ~ "Win", .default = "Loss")
) |>
summarize(wins = sum(Result == "Win"), loss = sum(Result == "Loss"), record = wins/(wins + loss)) |>
# summarize(record = wins/(wins + loss)) |>
as.numeric()
}
tmRec("Southern Utah")
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Wins = numeric(),
Losses = numveric(),
Record = numeric()
)
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Wins = numeric(),
Losses = numeric(),
Record = numeric()
)
x = 1:710
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Wins = tmRec(Teams$Away[i][1]), Losses = tmRec(Teams$Away[i][2]),  Record = tmRec(Teams$Away[i][3]))
}
print(recs23)
tmRec("Southern Utah")[1]
tmRec("Southern Utah") [2]
tmRec("Southern Utah")[3]
Teams <- as_tibble(cbbga23)|>
add_column("Team")|>
group_by(Home) |>
group_by(Away) |>
summarise()
recs23 <- tibble(
Team = character(),
Wins = numeric(),
Losses = numeric(),
Record = numeric()
)
x = 1:710
for(i in 1:710){
recs23 <-  add_row(recs23, Team = Teams$Away[i], Wins = tmRec(Teams$Away[i])[1], Losses = tmRec(Teams$Away[i])[2],  Record = tmRec(Teams$Away[i])[3])
}
print(recs23)
library(hoops)
tmHist("Southern Utah")
ptsHist("Southern Utah")
library(hoops)
ptsHist("Southern Utah")
library(hoops)
library(ggplot2)
library(tidyverse)
library(dplyr)
?teamGms
library(hoops)
teamGms("Southern Utah")
library(hoops)
teamGms(cbbga23, "Southern Utah")
teamGms <- function(data, team){
tm <- data |>
dplyr::filter(Away == team | Home == team)
tm
}
teamGms(cbbga23, "Southern Utah")
\begin{table}[h]
?glm
cement <- readxl::read_xls("Concrete_Data.xls") |>
cement <- readxl::read_xls("Concrete_Data.xls")
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash(component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
library(tidyverse)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash(component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash(component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water(component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water  (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3
mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water  (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3 mixture)",
"coarseAgg" = "Coarse Aggregate (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
cement <- readxl::read_xls("Concrete_Data.xls") |>
rename("cement" = "Cement (component 1)(kg in a m^3 mixture)",
"slag" = "Blast Furnace Slag (component 2)(kg in a m^3 mixture)",
"flyAsh" = "Fly Ash (component 3)(kg in a m^3 mixture)",
"water" = "Water  (component 4)(kg in a m^3 mixture)",
"superplasticizer" = "Superplasticizer (component 5)(kg in a m^3 mixture)",
"coarseAgg" = "Coarse Aggregate  (component 6)(kg in a m^3 mixture)",
"fineAgg" = "Fine Aggregate (component 7)(kg in a m^3 mixture)",
"age" = "Age (day)",
"strength" = "Concrete compressive strength(MPa, megapascals)"
)
?ggpairs
install.packages("GGally")
library(tidyverse)
library(GGally)
ggpairs(cement)
ggpairs(cement, lower = list(continuous = wrap("points", alpha = 0.3,
size = 0.1),
combo = wrap("dot", alpha = 0.4, size = 0.2)))
setwd("~/MATH3190/Math_3190_Assignments/Homework/Homework 7")
f <- log(1 + x^2)(1 + x)*exp(x^(-x^2))
f <- function(x){
log(1 + x^2)(1 + x)*exp(x^(-x^2))
}
f(0.987)
print(f(0.987))
f <- function(x){
log(1 + x^2)*(1 + x)*exp(x^(-x^2))
}
f <- function(x){
log(1 + x^2)*(1 + x)*exp(x^(-x^2))
}
print(f(0.987))
f <- function(x){
(log(1 + x^2))*(1 + x)*exp(x^(-x^2))
}
print(f(0.987))
?log
f <- function(x){
(log(1 + x^2))*(1 + x)*exp(-x^2)
}
print(f(0.987))
f <- function(x){
(log(1 + x^2))*(1 + x)*exp(-x^2)
}
fPrime <- function(x){
(2*x / 1+x^2)*(1 + x)*exp(-x^2) + log(1 + x^2) *
(exp(-x^2) + (1 + x)*exp(-x^2)* - 2*x)
}
fPrime(0.987)
fPrime(-1.469)
f <- function(x){
(log(1 + x^2))*(1 + x)*exp(-x^2)
}
fPrime <- function(x){
(2*x / (1+x^2))*(1 + x)*exp(-x^2) + log(1 + x^2) *
(exp(-x^2) + (1 + x)*exp(-x^2)* - 2*x)
}
fPrime(-1.469)
?gradient
graDesc <- function(startVal, f, fPrime, max = F, maxIt = 200,
step = 1, betaLine = 0.5, tolerance = 1e-10){
if(max){
g <- function(x){
-f(x)
}
gPrime <- function(x){
-fPrime(x)
}
} else{
g <- f
gPrime <- fPrime
}
for(k in maxIt){
while(g(startVal - step * gPrime(startVal)) >
g(startVal) - step/4 * sum(gPrime(startVal)^2)){
step <- betaLine * step
}
xnew <- startVal - step * gPrime(startVal)
if(abs(startVal - xnew) < tolerance){
break
}
startVal <- xnew
}
}
graDesc(startVal = 1, f = f, fPrime = f)
print(graDesc(startVal = 1, f = f, fPrime = f))
graDesc <- function(startVal, f, fPrime, max = F, maxIt = 200,
step = 1, betaLine = 0.5, tolerance = 1e-10){
if(max){
g <- function(x){
-f(x)
}
gPrime <- function(x){
-fPrime(x)
}
} else{
g <- f
gPrime <- fPrime
}
for(k in maxIt){
while(g(startVal - step * gPrime(startVal)) >
g(startVal) - step/4 * sum(gPrime(startVal)^2)){
step <- betaLine * step
}
xnew <- startVal - step * gPrime(startVal)
if(abs(startVal - xnew) < tolerance){
break
}
startVal <- xnew
}
print (c(x, k, f(x) ))
}
f <- function(x){
(log(1 + x^2))*(1 + x)*exp(-x^2)
}
fPrime <- function(x){
(2*x / (1+x^2))*(1 + x)*exp(-x^2) + log(1 + x^2) *
(exp(-x^2) + (1 + x)*exp(-x^2)* - 2*x)
}
print(graDesc(startVal = 1, f = f, fPrime = fPrime))
graDesc(startVal = 1, f = f, fPrime = fPrime)
graDesc <- function(startVal, f, fPrime, max = F, maxIt = 200,
step = 1, betaLine = 0.5, tolerance = 1e-10){
if(max){
g <- function(x){
-f(x)
}
gPrime <- function(x){
-fPrime(x)
}
} else{
g <- f
gPrime <- fPrime
}
for(k in maxIt){
while(g(startVal - step * gPrime(startVal)) >
g(startVal) - step/4 * sum(gPrime(startVal)^2)){
step <- betaLine * step
}
xnew <- startVal - step * gPrime(startVal)
if(abs(startVal - xnew) < tolerance){
break
}
startVal <- xnew
}
print (c(x, k, f(x) ))
}
graDesc(startVal = 1, f = f, fPrime = fPrime)
