}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
if (is.numeric(reactive(mtcars[[input$var]])) && reactive(input$type) == "Bar Chart") {
output$warning <-  renderText(print("Try again!"))
}
output$plot1 <- renderPlot({
if (input$type == "Histogram") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'black', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'black', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
if (is.numeric(reactive(mtcars[[input$var]])) && reactive(input$type) == "Bar Chart") {
output$warning <-  renderText(print("Try again!"))
}
output$plot1 <- renderPlot({
if (input$type == "Histogram") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart") {
print("Try again!")})
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart") {
print("Try again!")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again!")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again!")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again!")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram" &&
(is.numeric((mtcars[[input$var]]))) {
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again!")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart") {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again!")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart" &&
is.numeric((mtcars[[input$var]])) == FALSE) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again! Numeric variables should only be plotted
as a histogram or boxplot. Categorical variables should
only be plotted as a bar chart.")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart" &&
is.numeric((mtcars[[input$var]])) == FALSE) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
print(plt)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
# Put a titlePanel here
titlePanel("Car Graphs"),
sidebarLayout(
# Sidebar. Put your inputs inside the sidebarPanel
sidebarPanel(
selectInput("var", "Variable", names(mtcars)),
selectInput("type", "Graph Type", c("Histogram", "Bar Chart",
"Box Plot")),
),
# Main panel. put your output plot here
mainPanel(
textOutput("warning"),
plotOutput("plot1")
)
)
)
server <- function(input, output) {
output$warning <-  renderText({
if
(is.numeric((mtcars[[input$var]])) &&
(input$type) == "Bar Chart" |
(is.numeric((mtcars[[input$var]])) == FALSE & (input$type)
==   "Histogram" | (input$type) == "Box Plot"))  {
print("Try again! Numeric variables should only be plotted
as a histogram or boxplot. Categorical variables should
only be plotted as a bar chart.")
}
})
output$plot1 <- renderPlot({
if (input$type == "Histogram" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_histogram(bins = 10, color = 'hotpink', fill = "lightpink") +
theme_light() +
labs(x = input$var, y = "Frequency")
}
if (input$type == "Box Plot" &&
is.numeric((mtcars[[input$var]]))) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_boxplot(color = 'royalblue', fill = "lightskyblue") +
theme_light() +
labs(x = input$var)
}
if (input$type == "Bar Chart" &&
is.numeric((mtcars[[input$var]])) == FALSE) {
plt <- ggplot(mtcars, aes(x = .data[[input$var]])) +
geom_bar(color = 'purple', fill = "mediumpurple1") +
theme_light() +
labs(x = input$var, y = "Total")
}
plt
})
}
shinyApp(ui = ui, server = server)
